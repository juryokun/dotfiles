#=============================================================================================
# PLUGINS
#=============================================================================================

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# DEIN

[[plugins]]
repo = 'Shougo/dein.vim'

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# COLORSCHEME

[[plugins]]
repo = 'AlessandroYorba/Alduin'

# [[plugins]]
# repo = 'mkarmona/colorsbox'

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# FILE MANAGER

# [[plugins]]
# repo = 'Shougo/unite.vim'
# hook_add = '''
#     if has('windows') && executable('jvgrep')
#         let g:unite_source_grep_command = 'jvgrep'
#         let g:unite_source_grep_default_opts = '-r'
#         let g:unite_source_greprecursive_opt = '-R'
#     endif
# '''

# [[plugins]]
# repo = 'Shougo/vimfiler'
# hook_add = '''
#     let g:vimfiler_enable_auto_cd=1
#     let g:vimfiler_as_default_explorer=1
# '''

[[plugins]]
repo = 'Shougo/defx.nvim'
hook_add = '''
    autocmd FileType defx call s:defx_my_settings()
    function! s:defx_my_settings() abort
        " Define mappings
        nnoremap <silent><buffer><expr> <CR>    defx#do_action('open')
        nnoremap <silent><buffer><expr> l       defx#do_action('drop')
        nnoremap <silent><buffer><expr> P       defx#do_action('open', 'pedit')
        nnoremap <silent><buffer><expr> c       defx#do_action('copy')
        nnoremap <silent><buffer><expr> m       defx#do_action('move')
        nnoremap <silent><buffer><expr> p       defx#do_action('paste')
        nnoremap <silent><buffer><expr> K       defx#do_action('new_directory')
        nnoremap <silent><buffer><expr> <C-n>   defx#do_action('new_file')
        nnoremap <silent><buffer><expr> d       defx#do_action('remove')
        nnoremap <silent><buffer><expr> r       defx#do_action('rename')
        nnoremap <silent><buffer><expr> x       defx#do_action('execute_system')
        nnoremap <silent><buffer><expr> .       defx#do_action('toggle_ignored_files')
        nnoremap <silent><buffer><expr> h       defx#do_action('cd', ['..'])
        nnoremap <silent><buffer><expr> ~       defx#do_action('cd')
        nnoremap <silent><buffer><expr> o       defx#do_action('open_or_close_tree')
        nnoremap <silent><buffer><expr> q       defx#do_action('quit')
        nnoremap <silent><buffer><expr> <Space> defx#do_action('toggle_select') . 'j'
        nnoremap <silent><buffer><expr> j       line('.') == line('$') ? 'gg' : 'j'
        nnoremap <silent><buffer><expr> k       line('.') == 1 ? 'G' : 'k'
        nnoremap <silent><buffer><expr> <C-l>   defx#do_action('redraw')
        nnoremap <silent><buffer><expr> <C-g>   defx#do_action('print')
        nnoremap <silent><buffer><expr> C       defx#do_action('change_vim_cwd')
        nnoremap <silent><buffer><expr> yy      defx#do_action('yank_path')
    endfunction
'''

[[plugins]]
repo = 'Shougo/denite.nvim'

#[[plugins]]
#repo = 'roxma/vim-hug-neovim-rpc'
#on_if = '!has("nvim")'
#
#[[plugins]]
#repo = 'roxma/nvim-yarp'
#on_if = '!has("nvim")'

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# TAGS

[[plugins]]
repo = 'ozelentok/denite-gtags'
depends = ['denite.nvim']

[[plugins]]
repo = 'lighttiger2505/gtags.vim'

[[plugins]]
repo = 'jsfaint/gen_tags.vim'
hook_add = '''
    let g:gen_tags#ctags_auto_gen = 1
    let g:gen_tags#gtags_auto_gen = 1
    let g:gen_tags#use_cache_dir = 0
'''

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# INDENT

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
    let g:indent_guides_enable_on_vim_startup = 1
    let g:indent_guides_auto_colors =0
    let g:indent_guides_start_level = 1
    let g:indent_guides_guide_size = 1
    autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=black
    autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=darkgrey
'''

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# STATUS LINE

[[plugins]]
repo = 'itchyny/lightline.vim'

# [[plugins]]
# repo = 'vim-airline/vim-airline'
#
# [[plugins]]
# repo = 'vim-airline/vim-airline-themes'

# [[plugins]]
# repo = 'ryanoasis/vim-devicons'

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# GIT

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'airblade/vim-gitgutter'

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# OTHERS

# save yank history
[[plugins]]
repo = 'Shougo/neoyank.vim'

# resize window
[[plugins]]
repo = 'simeji/winresizer'

# quickrun
[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
    let g:quickrun_no_default_key_mappings = 1
    let g:quickrun_config = {}
    let g:quickrun_config.python = {'command' : 'python3'}
'''

# [[plugins]]
# repo = 'tpope/vim-surround'

[[plugins]]
repo = 'machakann/vim-sandwich'

[[plugins]]
repo = 'reireias/vim-cheatsheet'
hook_add = '''
    let g:cheatsheet#cheat_file = '~/.config/nvim/.cheatsheet.md'
    let g:cheatsheet#vsplit = 1
'''

[[plugins]]
repo = 'tomtom/tcomment_vim'

# [[plugins]]
# repo = 'nixprime/cpsm'
# build = 'env PY3=ON ./install.sh'
# on_if = '!has("win32")'

[[plugins]]
repo = 'freitass/todo.txt-vim'

# [[plugins]]
# repo = 'w0rp/ale'
